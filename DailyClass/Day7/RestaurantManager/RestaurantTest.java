
public class RestaurantTest {
    public static void main(String[] args) {
        // Test file generated by ChatGPT o4-mini-high 2025-07-29

        // Obtain singleton instance of the manager
        IRestaurantManager manager = RestaurantManagerImpl.getInstance();

        // Add general restaurants
        Restaurant r1 = new Restaurant(1, "Sushi Place", "123 Tokyo St", "Sushi Set", 5);
        Restaurant r2 = new Restaurant(2, "Pasta Corner", "456 Rome Ave", "Spaghetti", 4);
        manager.addRestaurant(r1);
        manager.addRestaurant(r2);

        // Add Korean restaurants
        KoreanRestaurant kr1 = new KoreanRestaurant(
            3,
            "Kimchi House",
            "789 Seoul Rd",
            "Kimchi Stew",
            5,
            "010-1234-5678",
            "15:00-17:00"
        );
        KoreanRestaurant kr2 = new KoreanRestaurant(
            4,
            "Bibimbap World",
            "321 Busan Blvd",
            "Bibimbap",
            4,
            "010-8765-4321",
            "14:00-16:00"
        );
        manager.addRestaurant(kr1);
        manager.addRestaurant(kr2);

        // Print all restaurants
        System.out.println("=== All Restaurants ===");
        for (Restaurant r : manager.getRestaurantList()) {
            System.out.println(r);
        }

        // Search by resId = 3
        System.out.println("\n=== Search by resId '3' ===");
        System.out.println(manager.searchByresId(3));

        // List only Korean restaurants
        System.out.println("\n=== Korean Restaurants ===");
        for (KoreanRestaurant kr : manager.getKoreanRestaurants()) {
            System.out.println(kr);
        }

        // List non-Korean restaurants
        System.out.println("\n=== Non-Korean Restaurants ===");
        for (Restaurant r : manager.getNonKoreanRestaurants()) {
            System.out.println(r);
        }

        // Review manager for restaurant with resId = 3
        IReviewManager reviewManager = manager.getReviewManager(3);
        reviewManager.addReview(new Review(1, 3, "Alice", "Great food!"));
        reviewManager.addReview(new Review(2, 3, "Bob", "Excellent service."));

        // Print all reviews for restaurant 3
        System.out.println("\n=== Reviews for Restaurant 3 ===");
        for (Review rev : reviewManager.getReviewList()) {
            System.out.println(rev);
        }
    }
}
